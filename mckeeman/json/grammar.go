package json

import "parsium/mckeeman"

func JsonGrammar() mckeeman.Grammar {
	return mckeeman.NewGrammar([]mckeeman.Rule{
		mckeeman.NewRule(
			mckeeman.NewName("json"),
			[]mckeeman.Alternative{
				mckeeman.NewAlternative([]mckeeman.Item{
					mckeeman.NewName("element"),
				}),
			},
		),
		mckeeman.NewRule(
			mckeeman.NewName("value"),
			[]mckeeman.Alternative{
				mckeeman.NewAlternative([]mckeeman.Item{
					mckeeman.NewName("object"),
				}),
				mckeeman.NewAlternative([]mckeeman.Item{
					mckeeman.NewName("array"),
				}),
				mckeeman.NewAlternative([]mckeeman.Item{
					mckeeman.NewName("string"),
				}),
				mckeeman.NewAlternative([]mckeeman.Item{
					mckeeman.NewName("number"),
				}),
				mckeeman.NewAlternative([]mckeeman.Item{
					mckeeman.NewCharacters("true"),
				}),
				mckeeman.NewAlternative([]mckeeman.Item{
					mckeeman.NewCharacters("false"),
				}),
				mckeeman.NewAlternative([]mckeeman.Item{
					mckeeman.NewCharacters("null"),
				}),
			},
		),
		mckeeman.NewRule(
			mckeeman.NewName("object"),
			[]mckeeman.Alternative{
				//mckeeman.NewAlternative([]mckeeman.Item{
				//	mckeeman.NewSingleton('{'),
				//	mckeeman.NewName("ws"),
				//	mckeeman.NewSingleton('}'),
				//}),
				mckeeman.NewAlternative([]mckeeman.Item{
					mckeeman.NewSingleton('{'),
					mckeeman.NewName("members"),
					mckeeman.NewSingleton('}'),
				}),
			},
		),
		mckeeman.NewRule(
			mckeeman.NewName("members"),
			// TODO Order of alternatives
			[]mckeeman.Alternative{
				mckeeman.NewAlternative([]mckeeman.Item{
					mckeeman.NewName("member"),
					mckeeman.NewSingleton(','),
					mckeeman.NewName("members"),
				}),
				mckeeman.NewAlternative([]mckeeman.Item{
					mckeeman.NewName("member"),
				}),
			},
		),
		mckeeman.NewRule(
			mckeeman.NewName("member"),
			[]mckeeman.Alternative{
				mckeeman.NewAlternative([]mckeeman.Item{
					mckeeman.NewName("ws"),
					mckeeman.NewName("string"),
					mckeeman.NewName("ws"),
					mckeeman.NewSingleton(':'),
					mckeeman.NewName("element"),
				}),
			},
		),
		mckeeman.NewRule(
			mckeeman.NewName("array"),
			[]mckeeman.Alternative{
				mckeeman.NewAlternative([]mckeeman.Item{
					mckeeman.NewSingleton('['),
					mckeeman.NewName("ws"),
					mckeeman.NewSingleton(']'),
				}),
				mckeeman.NewAlternative([]mckeeman.Item{
					mckeeman.NewSingleton('['),
					mckeeman.NewName("elements"),
					mckeeman.NewSingleton(']'),
				}),
			},
		),
		mckeeman.NewRule(
			mckeeman.NewName("elements"),
			// TODO Order of alternatives
			[]mckeeman.Alternative{
				// Alternative #2
				mckeeman.NewAlternative([]mckeeman.Item{
					mckeeman.NewName("element"),
					mckeeman.NewSingleton(','),
					mckeeman.NewName("elements"),
				}),
				// Alternative #1
				mckeeman.NewAlternative([]mckeeman.Item{
					mckeeman.NewName("element"),
				}),
			},
		),
		mckeeman.NewRule(
			mckeeman.NewName("element"),
			[]mckeeman.Alternative{
				mckeeman.NewAlternative([]mckeeman.Item{
					mckeeman.NewName("ws"),
					mckeeman.NewName("value"),
					mckeeman.NewName("ws"),
				}),
			},
		),
		mckeeman.NewRule(
			mckeeman.NewName("string"),
			[]mckeeman.Alternative{
				mckeeman.NewAlternative([]mckeeman.Item{
					mckeeman.NewSingleton('"'),
					mckeeman.NewName("characters"),
					mckeeman.NewSingleton('"'),
				}),
			},
		),
		mckeeman.NewRule(
			mckeeman.NewName("characters"),
			// TODO Order
			[]mckeeman.Alternative{
				mckeeman.NewAlternative([]mckeeman.Item{
					mckeeman.NewName("character"),
					mckeeman.NewName("characters"),
				}),
				mckeeman.EmptyAlternative(),
			},
		),
		mckeeman.NewRule(
			mckeeman.NewName("character"),
			[]mckeeman.Alternative{
				mckeeman.NewAlternative([]mckeeman.Item{
					mckeeman.NewRangeWithExclude(
						mckeeman.NewSingleton(0x20),
						mckeeman.NewSingleton(0x10FFFF),
						mckeeman.Exclude{
							Literal: mckeeman.NewSingleton('"'),
							Next: &mckeeman.Exclude{
								Literal: mckeeman.NewSingleton('\\'),
							},
						},
					),
				}),
				mckeeman.NewAlternative([]mckeeman.Item{
					mckeeman.NewSingleton('\\'),
					mckeeman.NewName("escape"),
				}),
			},
		),
		mckeeman.NewRule(
			mckeeman.NewName("escape"), []mckeeman.Alternative{
				mckeeman.NewAlternative([]mckeeman.Item{
					mckeeman.NewSingleton('"'),
				}),
				mckeeman.NewAlternative([]mckeeman.Item{
					mckeeman.NewSingleton('\\'),
				}),
				mckeeman.NewAlternative([]mckeeman.Item{
					mckeeman.NewSingleton('/'),
				}),
				mckeeman.NewAlternative([]mckeeman.Item{
					mckeeman.NewSingleton('b'),
				}),
				mckeeman.NewAlternative([]mckeeman.Item{
					mckeeman.NewSingleton('f'),
				}),
				mckeeman.NewAlternative([]mckeeman.Item{
					mckeeman.NewSingleton('n'),
				}),
				mckeeman.NewAlternative([]mckeeman.Item{
					mckeeman.NewSingleton('r'),
				}),
				mckeeman.NewAlternative([]mckeeman.Item{
					mckeeman.NewSingleton('t'),
				}),
				mckeeman.NewAlternative([]mckeeman.Item{
					mckeeman.NewSingleton('u'),
					mckeeman.NewName("hex"),
					mckeeman.NewName("hex"),
					mckeeman.NewName("hex"),
					mckeeman.NewName("hex"),
				}),
			},
		),
		mckeeman.NewRule(
			mckeeman.NewName("hex"), []mckeeman.Alternative{
				mckeeman.NewAlternative([]mckeeman.Item{
					mckeeman.NewName("digit"),
				}),
				mckeeman.NewAlternative([]mckeeman.Item{
					mckeeman.NewSingleton('A'),
					mckeeman.NewSingleton('F'),
				}),
				mckeeman.NewAlternative([]mckeeman.Item{
					mckeeman.NewSingleton('a'),
					mckeeman.NewSingleton('f'),
				}),
			},
		),
		mckeeman.NewRule(
			mckeeman.NewName("number"),
			[]mckeeman.Alternative{
				mckeeman.NewAlternative([]mckeeman.Item{
					mckeeman.NewName("integer"),
					mckeeman.NewName("fraction"),
					mckeeman.NewName("exponent"),
				}),
			},
		),
		mckeeman.NewRule(
			mckeeman.NewName("integer"),
			[]mckeeman.Alternative{
				// TODO Order handling
				// Alternative #2
				mckeeman.NewAlternative([]mckeeman.Item{
					mckeeman.NewName("onenine"),
					mckeeman.NewName("digits"),
				}),
				// Alternative #1
				mckeeman.NewAlternative([]mckeeman.Item{
					mckeeman.NewName("digit"),
				},
				),
				// Alternative #4
				mckeeman.NewAlternative([]mckeeman.Item{
					mckeeman.NewSingleton('-'),
					mckeeman.NewName("onenine"),
					mckeeman.NewName("digits"),
				}),
				// Alternative #3
				mckeeman.NewAlternative([]mckeeman.Item{
					mckeeman.NewSingleton('-'),
					mckeeman.NewName("digit"),
				}),
			},
		),
		mckeeman.NewRule(
			mckeeman.NewName("digits"),
			// TODO Order
			[]mckeeman.Alternative{
				// Alternative #2
				mckeeman.NewAlternative([]mckeeman.Item{
					mckeeman.NewName("digit"),
					mckeeman.NewName("digits"),
				}),
				// Alternative #1
				mckeeman.NewAlternative([]mckeeman.Item{
					mckeeman.NewName("digit"),
				}),
			},
		),
		mckeeman.NewRule(
			mckeeman.NewName("digit"),
			[]mckeeman.Alternative{
				mckeeman.NewAlternative([]mckeeman.Item{
					mckeeman.NewSingleton('0'),
				}),
				mckeeman.NewAlternative([]mckeeman.Item{
					mckeeman.NewName("onenine"),
				}),
			},
		),
		mckeeman.NewRule(
			mckeeman.NewName("onenine"),
			[]mckeeman.Alternative{
				mckeeman.NewAlternative([]mckeeman.Item{
					mckeeman.NewRange('1', '9'),
				}),
			},
		),
		mckeeman.NewRule(
			mckeeman.NewName("fraction"),
			[]mckeeman.Alternative{
				mckeeman.NewAlternative([]mckeeman.Item{
					mckeeman.NewSingleton('.'),
					mckeeman.NewName("digits"),
				}),
				mckeeman.EmptyAlternative(),
			},
		),
		mckeeman.NewRule(
			mckeeman.NewName("exponent"),
			// TODO Order
			[]mckeeman.Alternative{
				mckeeman.NewAlternative([]mckeeman.Item{
					mckeeman.NewSingleton('E'),
					mckeeman.NewName("sign"),
					mckeeman.NewName("digits"),
				}),
				mckeeman.NewAlternative([]mckeeman.Item{
					mckeeman.NewSingleton('e'),
					mckeeman.NewName("sign"),
					mckeeman.NewName("digits"),
				}),
				mckeeman.EmptyAlternative(),
			},
		),
		mckeeman.NewRule(
			mckeeman.NewName("sign"),
			// TODO Order
			[]mckeeman.Alternative{
				mckeeman.NewAlternative([]mckeeman.Item{
					mckeeman.NewSingleton('+'),
				}),
				mckeeman.NewAlternative([]mckeeman.Item{
					mckeeman.NewSingleton('-'),
				}),
				mckeeman.EmptyAlternative(),
			},
		),
		mckeeman.NewRule(
			mckeeman.NewName("ws"),
			// TODO Order
			[]mckeeman.Alternative{
				mckeeman.NewAlternative([]mckeeman.Item{
					mckeeman.NewSingleton(0x20),
					mckeeman.NewName("ws"),
				}),
				mckeeman.NewAlternative([]mckeeman.Item{
					mckeeman.NewSingleton(0x0A),
					mckeeman.NewName("ws"),
				}),
				mckeeman.NewAlternative([]mckeeman.Item{
					mckeeman.NewSingleton(0x0D),
					mckeeman.NewName("ws"),
				}),
				mckeeman.NewAlternative([]mckeeman.Item{
					mckeeman.NewSingleton(0x09),
					mckeeman.NewName("ws"),
				}),
				mckeeman.EmptyAlternative(),
			},
		),
	},
	)
}
